/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2015-07-23 00:34:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.qst.francis.pojo.Info;

public final class admin_005fmodify_005fuser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1437466512864L));
    _jspx_dependants.put("jar:file:/F:/青软实训/FinalWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dsgqxxw/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.qst.francis.pojo.Info");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"utf-8\">\r\n");
      out.write("        <title>admin_modify_user</title>\r\n");
      out.write("        <style>\r\n");
      out.write("            #container{\r\n");
      out.write("                width: 70%;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                margin: 50px 0 0 50px;\r\n");
      out.write("            }\r\n");
      out.write("            table{\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            .error-info{\r\n");
      out.write("\t\t\t\tcolor: #f71;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("        <script>\r\n");
      out.write("            function judgeSamePassword(){\r\n");
      out.write("                var password1 = document.getElementById(\"password\").value;\r\n");
      out.write("                var password2 = document.getElementById(\"passwordAgain\").value;\r\n");
      out.write("                if(password1 == \"\" || password2 == \"\"){\r\n");
      out.write("                    document.getElementById(\"infoAlert\").innerHTML = \"密码不可为空\";\r\n");
      out.write("                    return false;\r\n");
      out.write("                }\r\n");
      out.write("                if(password1 != password2){\r\n");
      out.write("                    document.getElementById(\"infoAlert\").innerHTML = \"两次密码不一致\";\r\n");
      out.write("                    return false;\r\n");
      out.write("                }\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    ");

    	String userid = (String)request.getParameter("userid");
    	String username = (String)request.getParameter("username");
    
      out.write("\r\n");
      out.write("        <div id=\"container\">\r\n");
      out.write("        \t<form action=\"/dsgqxxw/updatePasswordUserAction\" method=\"post\" target=\"_parent\" onsubmit=\"return judgeSamePassword()\">\r\n");
      out.write("\t            <table>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <td>用户ID</td>\r\n");
      out.write("\t                    <td><input type=\"text\" name=\"userid\" readonly value=\"");
      out.print(userid );
      out.write("\"></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <td>用户名</td>\r\n");
      out.write("\t                    <td><input type=\"text\" name=\"username\" readonly value=\"");
      out.print(username );
      out.write("\"></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <td>请输入新的用户密码</td>\r\n");
      out.write("\t                    <td><input type=\"password\" name=\"password\" id=\"password\"></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t                <tr>\r\n");
      out.write("\t                    <td>请再次确认用户密码</td>\r\n");
      out.write("\t                    <td><input type=\"password\" name=\"passwordAgain\" id=\"passwordAgain\"></td>\r\n");
      out.write("\t                </tr>\r\n");
      out.write("\t               <tr>\r\n");
      out.write("\t                   <td colspan=\"2\" class=\"error-info\"><div id=\"infoAlert\"></div></td>\r\n");
      out.write("\t               </tr>\r\n");
      out.write("\t            </table>\r\n");
      out.write("\t            <input type=\"submit\" value=\"提交\">\r\n");
      out.write("\t            <input type=\"reset\" value=\"重置\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
